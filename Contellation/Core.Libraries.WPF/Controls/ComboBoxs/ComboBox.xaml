<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Core.Libraries.WPF.Controls"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <Style x:Key="DefaultComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
        <Setter Property="Foreground" Value="{DynamicResource Col_E4000000}" />
        <Setter Property="CaretBrush" Value="{DynamicResource Col_E4000000}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <controls:PassiveScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                                  Margin="{TemplateBinding Padding}" TextElement.Foreground="{TemplateBinding Foreground}"
                                                  Style="{DynamicResource DefaultTextBoxScrollViewerStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource Col_E4000000}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Border.CornerRadius" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="ContentBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <ContentPresenter x:Name="PART_ContentHost" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="Foreground" Value="{DynamicResource Col_E4000000}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="10,8,8,8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Border.CornerRadius" Value="4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid Background="Transparent">
                        <Border Name="ContentBorder" Margin="6,4,6,0" Padding="0" SnapsToDevicePixels="True" VerticalAlignment="Stretch"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid>
                                <ContentPresenter x:Name="PART_ContentPresenter" VerticalAlignment="Center" 
                                                  Margin="{TemplateBinding Padding}" />
                                <Rectangle x:Name="ActiveRectangle" Width="3" Height="16" Margin="0"
                                           HorizontalAlignment="Left" VerticalAlignment="Center"
                                           RadiusX="2" RadiusY="2" Visibility="Collapsed" 
                                           Fill="{DynamicResource Col_559ce4}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource Col_09000000}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ActiveRectangle" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Col_E4000000}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Col_5C000000}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
        <Setter Property="Foreground" Value="{DynamicResource Col_E4000000}" />
        <Setter Property="Background" Value="{DynamicResource Col_B3FFFFFF}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Padding" Value="10,8,10,8" />
        <Setter Property="Border.CornerRadius" Value="4" />
        <Setter Property="Popup.PopupAnimation" Value="None" />
        <!--  WPF doesn't like centering, the animation is ugly and the mouse button sometimes clicks right away.  -->
        <Setter Property="Popup.Placement" Value="Bottom" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border x:Name="ContentBorder" Grid.Row="0" Padding="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}"
                                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <!--
                                    Funky grid - because:
                                    Chevron is over Presenter, ToggleButton is over Chevron, TextBox is over ToggleButton.
                                    But, TextBox is not over Chevron, so ToggleButton still works.
                                -->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0" Margin="{TemplateBinding Padding}">
                                        <ContentPresenter Name="PART_ContentPresenter" IsHitTestVisible="False"
                                                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                          Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" TextElement.Foreground="{TemplateBinding Foreground}" />
                                    </Grid>
                                    <Grid Grid.Column="1" Margin="8,0,10,0">
                                        <TextBlock x:Name="ChevronIcon" Margin="0" FontSize="11.0" VerticalAlignment="Center"
                                                   Text="&#xf078;" FontFamily="{DynamicResource FontAwesome_Solid}" Foreground="{DynamicResource Col_9E000000}">
                                            <TextBlock.RenderTransform>
                                                <RotateTransform Angle="0"/>
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                    </Grid>
                                    <Grid Grid.Column="0" Grid.ColumnSpan="2" Margin="0">
                                        <ToggleButton Name="ToggleButton" ClickMode="Press" Focusable="False"
                                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Foreground="{TemplateBinding Foreground}"
                                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Style="{StaticResource DefaultComboBoxToggleButtonStyle}" />
                                    </Grid>
                                    <Grid Grid.Column="0" Margin="{TemplateBinding Padding}">
                                        <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                 FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"
                                                 IsReadOnly="{TemplateBinding IsReadOnly}" Style="{StaticResource DefaultComboBoxTextBoxStyle}" />
                                    </Grid>
                                </Grid>
                                <Popup x:Name="Popup" Focusable="False" VerticalAlignment="Center" AllowsTransparency="True" VerticalOffset="1"
                                       MinWidth="{TemplateBinding ActualWidth}" IsOpen="{TemplateBinding IsDropDownOpen}" 
                                       Placement="{TemplateBinding Popup.Placement}" PopupAnimation="{TemplateBinding Popup.PopupAnimation}" >
                                    <Border x:Name="DropDownBorder" Margin="0" Padding="0,4,0,6" SnapsToDevicePixels="True" 
                                            BorderThickness="1" CornerRadius="8,8,8,8"
                                            Background="{DynamicResource Col_F9F9F9}"
                                            BorderBrush="{DynamicResource Col_66757575}" >
                                        <Border.RenderTransform>
                                            <TranslateTransform />
                                        </Border.RenderTransform>
                                        <Grid>
                                            <controls:DynamicScrollViewer Margin="0" SnapsToDevicePixels="True" 
                                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                                                          TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"
                                                            TextElement.FontSize="{TemplateBinding FontSize}" />
                                            </controls:DynamicScrollViewer>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <Border x:Name="AccentBorder"  BorderThickness="0,0,0,2" Visibility="Collapsed" 
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                BorderBrush="{DynamicResource Col_80b9ee}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}"
                            />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="180" Duration="00:00:00.167" Storyboard.TargetName="ChevronIcon" />
                                        <DoubleAnimation From="-90" To="0" Duration="00:00:00.167" Storyboard.TargetName="DropDownBorder" 
                                                         Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)" >
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="180" To="0" Duration="00:00:00.167" Storyboard.TargetName="ChevronIcon" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="32.0" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="False">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                <Condition Property="IsEditable" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource Col_B3FFFFFF}" />
                            <Setter TargetName="AccentBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource Col_80F9F9F9}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource Col_4DF9F9F9}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource Col_0F000000}" />
                            <Setter Property="Foreground" Value="{DynamicResource Col_5C000000}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}" />
    <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="{x:Type ComboBox}" />

</ResourceDictionary>