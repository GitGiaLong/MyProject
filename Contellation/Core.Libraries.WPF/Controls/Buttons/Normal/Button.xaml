<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Core.Libraries.WPF.Controls"
                    xmlns:typeControl="clr-namespace:Core.Entities.Conntrols.Enums;assembly=Core.Entities">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Core.Libraries.WPF;component/Generics/Styles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="11 5 11 6" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Border.CornerRadius" Value="4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ContentBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}"
                            Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" 
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <ContentPresenter x:Name="ContentPresenter" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          TextElement.Foreground="{TemplateBinding Foreground}" />

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#80b9ee" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="#ABCFF2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#2D3236" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="#A6A6A6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#212D3B" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="#ABCFF2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultButtonStyle}" TargetType="{x:Type Button}" />

    <Style x:Key="DefaultUiButtonStyle" TargetType="{x:Type controls:Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--<Setter Property="Background" Value="{DynamicResource ButtonBackground}" />-->
        <Setter Property="MouseOverBackground" Value="#ABCFF2" />
        <!--<Setter Property="PressedBackground" Value="" />-->
        <!--<Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />-->
        <Setter Property="PressedForeground" Value="#FFFFFF" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="PressedBorderBrush" Value="Transparent" />
        <Setter Property="MouseOverBorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="11 5 11 6" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />

        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Canvas.ZIndex" Value="1" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Button}">
                    <Border x:Name="ContentBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter x:Name="ControlIcon" Grid.Column="0" Margin="0,0,8,0" VerticalAlignment="Center" Focusable="False"
                                                  Content="{TemplateBinding Icon}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                                  TextElement.FontFamily="{TemplateBinding FontFamilyIcon}" 
                                                  TextElement.Foreground="{TemplateBinding Foreground}" />

                                <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" VerticalAlignment="Center" 
                                                  Content="{TemplateBinding Content}" TextElement.Foreground="{TemplateBinding Foreground}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="ControlIcon" Property="TextElement.Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="#2D3236" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="ControlIcon" Property="TextElement.Foreground" Value="#A6A6A6" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="#A6A6A6" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ControlIcon" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter TargetName="ControlIcon" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="ControlIcon" Property="Margin" Value="0" />
                            <Setter TargetName="ControlIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="ActionButton" Value="{x:Static typeControl:ButtonAction.Minimize}">
                            <Setter Property="CommandParameter" Value="{x:Static typeControl:ButtonAction.Minimize}" />
                            <Setter Property="Command" Value="{x:Static SystemCommands.MinimizeWindowCommand}" />
                            <Setter Property="FontFamilyIcon" Value="{StaticResource FontAwesome_Light_Pro}" />
                            <Setter Property="Icon" Value="&#xf2d1;" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="CornerRadius" Value="0" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Width" Value="48" />
                            <Setter Property="ToolTip" Value="Minimize" />
                        </Trigger>
                        <Trigger Property="ActionButton" Value="{x:Static typeControl:ButtonAction.Maximize}">
                            <Setter Property="CommandParameter" Value="{x:Static typeControl:ButtonAction.Maximize}" />
                            <Setter Property="Command" Value="{x:Static SystemCommands.MaximizeWindowCommand}" />
                            <Setter Property="FontFamilyIcon" Value="{StaticResource FontAwesome_Light_Pro}" />
                            <Setter Property="Icon" Value="&#xf0c8;" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="CornerRadius" Value="0" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Width" Value="48" />
                        </Trigger>
                        <Trigger Property="ActionButton" Value="{x:Static typeControl:ButtonAction.Close}">
                            <Setter Property="CommandParameter" Value="{x:Static typeControl:ButtonAction.Close}" />
                            <Setter Property="Command" Value="{x:Static SystemCommands.CloseWindowCommand}" />
                            <Setter Property="FontFamilyIcon" Value="{StaticResource FontAwesome_Light_Pro}" />
                            <Setter Property="Icon" Value="&#xf00d;" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="CornerRadius" Value="0" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Width" Value="48" />
                            <Setter Property="ToolTip" Value="Exit" />
                            <Setter Property="MouseOverButtonsForeground" Value="Gray" />
                            <Setter Property="MouseOverBackground" Value="#F44336" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style BasedOn="{StaticResource DefaultUiButtonStyle}" TargetType="{x:Type controls:Button}" />


</ResourceDictionary>