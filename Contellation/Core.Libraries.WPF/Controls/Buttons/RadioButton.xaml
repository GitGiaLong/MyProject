<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="DefaultRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="Background" Value="{DynamicResource Col_559ce4}" />
        <Setter Property="Foreground" Value="{DynamicResource Col_E4000000}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="8,6,0,0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid HorizontalAlignment="Stretch" Background="Transparent" VerticalAlignment="{TemplateBinding VerticalAlignment}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Height="32" VerticalAlignment="Top">
                            <Ellipse x:Name="OuterEllipse" Width="20" Height="20" StrokeThickness="1" UseLayoutRounding="False" 
                                     Fill="{DynamicResource Col_06000000}" Stroke="{DynamicResource Col_72000000}" />
                            <!--  A seperate element is added since the two orthogonal state groups that cannot touch the same property  -->
                            <Ellipse x:Name="CheckOuterEllipse" Width="20" Height="20" Opacity="0" StrokeThickness="1" UseLayoutRounding="False" 
                                     Fill="{TemplateBinding Background}" Stroke="{TemplateBinding Background}" />
                            <Ellipse x:Name="CheckGlyph" Width="12" Height="12" Opacity="0" UseLayoutRounding="False"
                                     Fill="{DynamicResource Col_FFFFFF}" Stroke="{DynamicResource CircleElevationBorderBrush}" >
                                <Ellipse.LayoutTransform>
                                    <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                                </Ellipse.LayoutTransform>
                            </Ellipse>
                            <!--  A seperate element is added since the two orthogonal state groups that cannot touch the same property  -->
                            <Border x:Name="PressedCheckGlyph" Width="4" Height="4" CornerRadius="6" Opacity="0" UseLayoutRounding="False" 
                                    Background="{DynamicResource Col_FFFFFF}" BorderBrush="{DynamicResource CircleElevationBorderBrush}" />

                        </Grid>
                        <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1.0" />
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource Col_18000000}" />
                            <Setter TargetName="OuterEllipse" Property="Stroke" Value="{DynamicResource Col_37000000}" />
                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1.0" />
                            <Setter TargetName="OuterEllipse" Property="Opacity" Value="0.0" />
                            <Setter TargetName="CheckOuterEllipse" Property="Opacity" Value="1.0" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource Col_0F000000}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource Col_0F000000}" />
                            <Setter TargetName="PressedCheckGlyph" Property="Background" Value="{DynamicResource Col_80b9ee}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource Col_5C000000}" />
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource Col_00FFFFFF}" />
                            <Setter TargetName="OuterEllipse" Property="Stroke" Value="{DynamicResource Col_37000000}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource Col_5C000000}" />
                            <Setter Property="Foreground" Value="{DynamicResource Col_5C000000}" />
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource Col_00FFFFFF}" />
                            <!--<Setter TargetName="OuterEllipse" Property="Stroke" Value="{DynamicResource RadioButtonOuterEllipseCheckedStrokeDisabled}" />-->
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="0.7" />
                            <Setter TargetName="CheckOuterEllipse" Property="Opacity" Value="0.7" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultRadioButtonStyle}" TargetType="{x:Type RadioButton}" />

</ResourceDictionary>