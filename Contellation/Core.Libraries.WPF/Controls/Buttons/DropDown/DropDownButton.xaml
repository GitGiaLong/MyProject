<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Core.Libraries.WPF.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Core.Libraries.WPF;component/Controls/Buttons/Normal/Button.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Core.Libraries.WPF;component/Generics/Styles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Thickness x:Key="ButtonChevronIconMargin">8,0,0,0</Thickness>

    <Style x:Key="DefaultUiDropDownButtonStyle" BasedOn="{StaticResource DefaultUiButtonStyle}" TargetType="{x:Type controls:DropDownButton}">
        <Setter Property="IsDropDownOpen" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DropDownButton}">
                    <Border x:Name="ContentBorder" Grid.Row="0" 
                            MinWidth="{TemplateBinding MinWidth}" Width="{TemplateBinding Width}" MinHeight="{TemplateBinding MinHeight}" Height="{TemplateBinding Height}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter x:Name="ControlIcon" Grid.Column="0" VerticalAlignment="Center" Focusable="False"
                                                  Margin="0,0,8,0" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Icon}" TextElement.FontSize="{TemplateBinding FontSize}"
                                                  TextElement.FontFamily="{TemplateBinding FontFamilyIcon}" TextElement.Foreground="{TemplateBinding Foreground}" />

                                <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" VerticalAlignment="Center"
                                                  Content="{TemplateBinding Content}" TextElement.Foreground="{TemplateBinding Foreground}" />

                                <TextBlock Text="&#xf078;" Grid.Column="2" 
                                           Margin="{StaticResource ButtonChevronIconMargin}" FontFamily="{StaticResource FontAwesome_Solid}"/>
                               
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="ControlIcon" Property="TextElement.Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource Col_4DF9F9F9}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource Col_0F000000}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Col_5C000000}" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ControlIcon" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter TargetName="ControlIcon" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="ControlIcon" Property="Margin" Value="0" />
                            <Setter TargetName="ControlIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultUiDropDownButtonStyle}" TargetType="{x:Type controls:DropDownButton}" />

</ResourceDictionary>