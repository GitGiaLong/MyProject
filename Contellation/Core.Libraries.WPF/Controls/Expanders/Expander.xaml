<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Core.Libraries.WPF;component/Generics/FontFamilies.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <ControlTemplate x:Key="DefaultExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Grid Margin="{TemplateBinding Padding}" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ContentPresenter x:Name="ContentPresenter" Grid.Column="0"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}" TextElement.FontSize="{TemplateBinding FontSize}" />
            <Grid x:Name="ChevronGrid" Grid.Column="1" Margin="0" VerticalAlignment="Center" Background="Transparent" RenderTransformOrigin="0.5, 0.5">
                <Grid.RenderTransform>
                    <RotateTransform Angle="0" />
                </Grid.RenderTransform>
                <TextBlock x:Name="ControlChevronIcon" Text="&#xf078;" FontFamily="{StaticResource FontAwesome_Solid}"
                           FontSize="16.0" Foreground="{TemplateBinding Foreground}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="180" Duration="00:00:00.167" Storyboard.TargetName="ChevronGrid" 
                                             Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="0" Duration="00:00:00.167" Storyboard.TargetName="ChevronGrid" 
                                             Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DefaultExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="Background" Value="{DynamicResource Col_0DFFFFFF}" />
        <Setter Property="Foreground" Value="{DynamicResource Col_FFFFFF}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Col_19000000}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="11" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Border.CornerRadius" Value="4" />
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!--  Top level controls always visible  -->
                        <Border x:Name="ToggleButtonBorder" Grid.Row="0" BorderThickness="1"
                                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <ToggleButton x:Name="ExpanderToggleButton" OverridesDefaultStyle="True" Margin="0" 
                                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"
                                          HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Header}" FontSize="{TemplateBinding FontSize}"
                                          Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsEnabled="{TemplateBinding IsEnabled}" Template="{StaticResource DefaultExpanderToggleButtonStyle}" />
                        </Border>

                        <!--  Collapsed content to expand  -->
                        <Grid Grid.Row="1" ClipToBounds="True">
                            <Border x:Name="ContentPresenterBorder"
                                    Background="{DynamicResource Col_08FFFFFF}" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1 0 1 1" CornerRadius="0 0 4 4" Visibility="Collapsed">
                                <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}" />
                                <Border.Tag>
                                    <system:Double>0.0</system:Double>
                                </Border.Tag>
                                <Border.RenderTransform>
                                    <TranslateTransform>
                                        <TranslateTransform.Y>
                                            <MultiBinding Converter="{StaticResource AnimationFactorToValueConverter}" ConverterParameter="negative">
                                                <Binding ElementName="ContentPresenterBorder" Path="ActualHeight" />
                                                <Binding ElementName="ContentPresenterBorder" Path="Tag" />
                                            </MultiBinding>
                                        </TranslateTransform.Y>
                                    </TranslateTransform>
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ToggleButtonBorder" Property="CornerRadius" Value="4,4,0,0" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="(Border.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="Tag">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1.0" />
                                            <SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0" KeyTime="0:0:0.333" Value="0.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="(Border.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="Tag">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.0" />
                                            <SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0" KeyTime="0:0:0.167" Value="1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Col_5DFFFFFF}" />
                            <Setter TargetName="ExpanderToggleButton" Property="Foreground" Value="{DynamicResource Col_5DFFFFFF}" />
                            <Setter TargetName="ExpanderToggleButton" Property="BorderBrush" Value="{DynamicResource Col_19000000}" />
                        </Trigger>
                        <Trigger SourceName="ExpanderToggleButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="ExpanderToggleButton" Property="BorderBrush" Value="{DynamicResource Col_1C1C1C}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultExpanderStyle}" TargetType="{x:Type Expander}" />

</ResourceDictionary>