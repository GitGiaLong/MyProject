<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Core.WPF.Controls"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Core.WPF;component/Themes/FontFamilies.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultTextBoxStyle" TargetType="{x:Type TextBox}">
        <!--  Universal focus  -->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--  Universal focus  -->
        <!--  Universal ContextMenu  -->
        <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
        <!--  Universal ContextMenu  -->
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="CaretBrush" Value="#FFFFFF" />
        <Setter Property="Background" Value="#2D3236" />
        <Setter Property="BorderBrush" Value="#FFFFFF" />
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Padding" Value="10 8 10 7" />
        <Setter Property="Border.CornerRadius" Value="4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border x:Name="ContentBorder" Padding="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}"
                                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <controls:PassiveScrollViewer x:Name="PART_ContentHost" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                                              IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                              IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}" TextElement.Foreground="{TemplateBinding Foreground}"
                                                              Style="{DynamicResource DefaultTextBoxScrollViewerStyle}"
                                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                            </Grid>
                        </Border>
                        <!--  The Accent Border is a separate element so that changes to the border thickness do not affect the position of the element  -->
                        <Border x:Name="AccentBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                BorderBrush="#12FFFFFF" BorderThickness="0,0,0,1" CornerRadius="{TemplateBinding Border.CornerRadius}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="AccentBorder" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="AccentBorder" Property="BorderBrush" Value="#ABCFF2" />
                            <Setter TargetName="ContentBorder" Property="Background" Value="#2D3236" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="#2D3236" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Cursor" Value="IBeam" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="#2D3236" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="#A6A6A6" />
                            <Setter TargetName="AccentBorder" Property="BorderBrush" Value="#A6A6A6" />
                            <Setter Property="Foreground" Value="#A6A6A6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DefaultUiTextBoxControlTemplate" TargetType="{x:Type controls:TextBox}">
        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <Border x:Name="ContentBorder" Padding="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}"
                    Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding Border.CornerRadius}">
                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ContentPresenter x:Name="ControlIconLeft" Grid.Column="0" Margin="10,0,0,0"
                                      Focusable="False" Visibility="Visible" VerticalAlignment="Center"
                                      Content="{TemplateBinding Icon}" TextElement.FontFamily="{TemplateBinding FontIcon}"
                                      TextElement.FontSize="{TemplateBinding FontSize}" TextElement.Foreground="{TemplateBinding Foreground}" />

                    <Grid Grid.Column="1" Margin="{TemplateBinding Padding}">
                        <controls:PassiveScrollViewer x:Name="PART_ContentHost" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                      IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}" Style="{DynamicResource DefaultTextBoxScrollViewerStyle}"
                                                      TextElement.Foreground="{TemplateBinding Foreground}"
                                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                        <TextBlock x:Name="PlaceholderTextBox" Margin="0" Padding="1,0" VerticalAlignment="Center" Foreground="#A6A6A6" 
                                   FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding PlaceholderText}" />
                    </Grid>

                    <!--  Buttons and Icons have no padding from the main element to allow absolute positions if height is larger than the text entry zone  -->
                    <controls:Button x:Name="ClearButton" Grid.Column="2" IsTabStop="False"
                                     MinWidth="24" MinHeight="24"
                                     Margin="0,0,4,0" Padding="0,0,0,0"
                                     Cursor="Arrow" Foreground="#FFFFFF"
                                     HorizontalAlignment="Center" VerticalAlignment="Center"
                                     HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                     Background="Transparent" BorderBrush="Transparent"
                                     Content="&#x58;" FontFamily="{StaticResource FontAwesome_Solid}"
                                     Command="{Binding Path=TemplateButtonCommand, RelativeSource={RelativeSource TemplatedParent}}">
                    </controls:Button>

                    <ContentPresenter x:Name="ControlIconRight" Grid.Column="3" Margin="0 0 10 0" VerticalAlignment="Center"
                                      Content="{TemplateBinding Icon}" TextElement.FontFamily="{TemplateBinding FontIcon}"
                                      TextElement.FontSize="{TemplateBinding FontSize}"
                                      TextElement.Foreground="{TemplateBinding Foreground}" />
                </Grid>
            </Border>
            <!--  The Accent Border is a separate element so that changes to the border thickness do not affect the position of the element  -->
            <Border x:Name="AccentBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    BorderBrush="#B6F6F0" BorderThickness="0 0 0 1" CornerRadius="4" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="PlaceholderEnabled" Value="False">
                <Setter TargetName="PlaceholderTextBox" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowClearButton" Value="False">
                <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ClearButton" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="ClearButtonEnabled" Value="False">
                <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ClearButton" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="IconPlacement" Value="Left">
                <Setter TargetName="ControlIconRight" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ControlIconRight" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="IconPlacement" Value="Right">
                <Setter TargetName="ControlIconLeft" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ControlIconLeft" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="ControlIconRight" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ControlIconRight" Property="Margin" Value="0" />
                <Setter TargetName="ControlIconLeft" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ControlIconLeft" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="AccentBorder" Property="BorderThickness" Value="0,0,0,2" />
                <Setter TargetName="AccentBorder" Property="BorderBrush" Value="#ABCFF2" />
                <Setter TargetName="ContentBorder" Property="Background" Value="#2D3236" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ContentBorder" Property="Background" Value="#2D3236" />
            </MultiTrigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ClearButton" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="IBeam" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ContentBorder" Property="Background" Value="#2D3236" />
                <Setter TargetName="ContentBorder" Property="BorderBrush" Value="#A6A6A6" />
                <Setter TargetName="AccentBorder" Property="BorderBrush" Value="#A6A6A6" />
                <Setter TargetName="ControlIconLeft" Property="TextElement.Foreground" Value="#A6A6A6" />
                <Setter TargetName="ControlIconRight" Property="TextElement.Foreground" Value="#A6A6A6" />
                <Setter TargetName="PlaceholderTextBox" Property="Foreground" Value="#A6A6A6" />
                <Setter Property="Foreground" Value="#A6A6A6" />
                <Setter Property="ClearButtonEnabled" Value="False" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DefaultUiTextBoxTextSelectionEnabledControlTemplate" TargetType="{x:Type controls:TextBox}">
        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <Border x:Name="ContentBorder" Padding="0" Focusable="False"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}"
                    Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding Border.CornerRadius}" >
                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <controls:PassiveScrollViewer x:Name="PART_ContentHost" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                                      IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}" Style="{DynamicResource DefaultTextBoxScrollViewerStyle}"
                                                      TextElement.Foreground="{TemplateBinding Foreground}"
                                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="DefaultUiTextBoxStyle" TargetType="{x:Type controls:TextBox}">
        <!--  Universal focus  -->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--  Universal focus  -->
        <!--  Universal ContextMenu  -->
        <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
        <!--  Universal ContextMenu  -->
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="CaretBrush" Value="#FFFFFF" />
        <Setter Property="Background" Value="#2D3236" />
        <Setter Property="BorderBrush" Value="#FFFFFF" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Padding" Value="10 8 10 7" />
        <Setter Property="Border.CornerRadius" Value="4" />
        <Setter Property="ClearButtonEnabled" Value="True" />
        <Setter Property="IconPlacement" Value="Left" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsTextSelectionEnabled" Value="False">
                <Setter Property="Template" Value="{StaticResource DefaultUiTextBoxControlTemplate}" />
            </Trigger>
            <Trigger Property="IsTextSelectionEnabled" Value="True">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template" Value="{StaticResource DefaultUiTextBoxTextSelectionEnabledControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="{x:Type TextBox}" />
    <Style BasedOn="{StaticResource DefaultUiTextBoxStyle}" TargetType="{x:Type controls:TextBox}" />
</ResourceDictionary>